services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  postgres-todo:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: todos_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - todo-db-data:/var/lib/postgresql/data

  postgres-person:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: persons_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - person-db-data:/var/lib/postgresql/data

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - todo-service
      - person-service
    environment:
      TODO_SERVICE_URL: http://todo-service:3001
      PERSON_SERVICE_URL: http://person-service:3002
  
  todo-service:
    build:
      context: .
      dockerfile: Dockerfile.todo-service
    ports:
      - "3001:3001"
    depends_on:
      - postgres-todo
      - kafka
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres-todo:5432/todos_db?schema=public"
      KAFKA_BROKER: "kafka:9092"
  
  person-service:
    build:
      context: .
      dockerfile: Dockerfile.person-service
    ports:
      - "3002:3002"
    depends_on:
      - postgres-person
      - kafka
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres-person:5432/persons_db?schema=public"
      KAFKA_BROKER: "kafka:9092"
  
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notification-service
    ports:
      - "3003:3003"  # Port HTTP
      - "3004:3004"  # Port WebSocket
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: "kafka:9092"
      WS_PORT: 3004
  
volumes:
  todo-db-data:
  person-db-data: